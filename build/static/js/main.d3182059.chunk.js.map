{"version":3,"sources":["logo.svg","axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fechtActionMovies","fechtComedyMovies","fechtHorrorMovies","fechtRomanceMovies","fechtDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3182059.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nexport default instance;","import React , { useState, useEffect } from 'react';\r\nimport axios from './axios'\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]) ;\r\n\r\n    const opts = {\r\n        height:'390',\r\n        width:'100%',\r\n        playerVars: {\r\n           // \"https://developers.google.com/youtube/player_parameters\"\r\n        autoplay:1,\r\n        },\r\n    };\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl('');\r\n        } else {\r\n            movieTrailer(movie?.name || \"\")\r\n            .then(url => {\r\n                const urlParams = new URLSearchParams (new URL(url).search);\r\n                setTrailerUrl(urlParams.get(\"v\"));\r\n            })\r\n            .catch((error) => console.log(error));\r\n        }\r\n    };\r\n    return(\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie =>\r\n                    <img \r\n                        key={movie.id} \r\n                        onClick={() => handleClick(movie)}\r\n                        className=\"row__poster\" \r\n                        src={`${base_url}${movie.poster_path}`} \r\n                        alt={movie.name} />\r\n                        )}\r\n                        </div>\r\n                        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n            export default Row;","import React from 'react';\r\n\r\nconst API_KEY = \"e6645318cb26f091f368f3606786246e\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${ API_KEY }&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&withlanguage=en-US` ,\r\n    fechtActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fechtComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fechtHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fechtRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fechtDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n}\r\n\r\nexport default requests;","import React, {useState, useEffect} from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css';\r\n\r\nfunction Banner () {\r\n\r\n    const [movie, setMovie] = useState([]);\r\n\r\nuseEffect(() => {\r\n    async function fetchData() {\r\n        const request = await axios.get(requests.fetchNetflixOriginals);\r\n        setMovie(\r\n            request.data.results[\r\n                Math.floor(Math.random()*request.data.results.length - 1)\r\n            ]\r\n        );\r\n    }\r\n    fetchData();\r\n\r\n}, []);\r\n\r\nfunction truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n}\r\n\r\n    return(\r\n        <header className=\"banner\"\r\n                style={{\r\n                    backgroundSize:\"cover\",\r\n                    backgroundImage: `url(\r\n                        \"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\"\r\n                        )`,\r\n                    backgroundPosition: \"center center\",\r\n                }}>\r\n            <div className=\"banner__contents\">\r\n              <h1>\r\n                  {movie?.name || movie?.title || movie?.original_name}\r\n              </h1>\r\n\r\n              <div className=\"banner__buttons\">\r\n                  <button className=\"banner__button\">Play</button>\r\n                  <button className=\"banner__button\">My List</button>\r\n              </div>\r\n              <h1 className=\"banner__description\">\r\n                  {truncate(movie?.overview, 150)}\r\n              </h1>\r\n            </div>\r\n\r\n            <div className=\"banner--fadeBottom\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Banner;","import React, { useEffect, useState }from 'react';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                handleShow(true);\r\n            } else handleShow(false);\r\n        });\r\n        return() => {\r\n            window.removeEventListener(\"scroll\");\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n       <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img \r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1280px-Netflix_2015_logo.svg.png\"\r\n        alt=\"Netflix\" />;\r\n\r\n        <img \r\n        className=\"nav__avatar\"\r\n        src=\"https://i.pinimg.com/originals/34/62/d2/3462d27440aa255b1c314ff16f4032b4.png\"\r\n        alt=\"user\" />\r\n       </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Nav;","import logo from './logo.svg';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Nav />\n\n        <Banner />\n        \n        <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} />\n        <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n        <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n        <Row title=\"Action Movies\" fetchUrl={requests.fechtActionMovies} />\n        <Row title=\"Comedy Movies\" fetchUrl={requests.fechtComedyMovies} />\n        <Row title=\"Horror Movies\" fetchUrl={requests.fechtHorrorMovies} />\n        <Row title=\"Documentaries\" fetchUrl={requests.fechtDocumentaries} />\n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}